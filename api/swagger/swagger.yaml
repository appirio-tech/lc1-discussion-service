swagger: "2.0"
info:
  version: "0.0.1"
  title: Serenity Discussion API
# during dev, should point to your local machine
host: lc1-discussion-service.herokuapp.com
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
x-volos-resources: {}
paths:
  /discussions:
    post:
      x-swagger-router-controller: discussions
      description: Create a new discusion
      # used as the method name of the controller
      operationId: create
      tags:
        - discussion
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: DiscussionBody
      responses:
        "200":
          description: Success
          schema:
            $ref: ActionResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
    get:
      x-swagger-router-controller: discussions
      description: Get Discussions
      operationId: getDiscussions
      tags:
        - discussion
      parameters:
        - name: filter
          in: query
          type: string
          description: "{fieldName1}={fieldValue1}&...{fieldNameN}>{fieldValueN}. String value needs to be surrounded by single quotation(â€˜). fieldValue can contain multiple values using in() format {fieldName}=in({fieldValue1},{fieldValue2}). Operations can be =, > or <.  < and > operations are only for number, integers and dates"
        - name: limit
          in: query
          type: integer
          format: int32
          description: maximum number of records to return
        - name: offset
          in: query
          type: integer
          format: int32
          description: id to start return values
        - name: orderBy
          in: query
          type: string
          description: field name to sort {asc [nulls {first | last} ] | desc  [nulls {first | last} }
        - name: expand
          in: query
          type: array
          required: false
          description: expand parameter which helps to request a full object
          items:
            type: string
      responses:
        "200":
          description: Return a Discussion Resource
          schema:
            $ref: DiscussionsResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
  /discussions/{discussionId}:
    get:
      x-swagger-router-controller: discussions
      description: Get a discussion
      operationId: findById
      tags:
        - discussion
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: expand
          in: query
          type: array
          required: false
          description: expand parameter which helps to request a full object
          items:
            type: string
      responses:
        "200":
          description: Return a Discussion Resource
          schema:
            $ref: DiscussionResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 400,
                  "message": "Parameter (discussionId) is not a valid int64 integer: a"
              }
  /discussions/{discussionId}/messages:
    post:
      x-swagger-router-controller: messages
      description: Create a Message
      operationId: create
      tags:
        - discussion
        - message
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            $ref: MessageBody
      responses:
        "200":
          description: Success
          schema:
            $ref: ActionResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 400,
                  "message": "Invalid content type (text/plain).  These are valid: application/json"
              }
    get:
      x-swagger-router-controller: messages
      description: Get all messages for a discussion
      operationId: getAllbyDiscussion
      tags:
        - discussion
        - message
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: expand
          in: query
          type: array
          required: false
          description: expand parameter which helps to request a full object
          items:
            type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: MessagesResponse
          examples:
            application/json: |-
              {
                  "messages": [{
                    "id": 8,
                    "discussionId": 4,
                    "parentMessageId": null,
                    "content": "Best saga ever",
                    "createdBy": "_indy",
                    "updatedBy": "_indy",
                    "createdAt": "2014-10-07T23:26:38.669Z",
                    "updatedAt": "2014-10-07T23:26:38.669Z",
                    "messages": []
                  },
                  {
                    "id": 9,
                    "discussionId": 4,
                    "parentMessageId": null,
                    "content": "My favorite is the first one - The Phantom Menace",
                    "createdBy": "_indy",
                    "updatedBy": "_indy",
                    "createdAt": "2014-10-08T00:05:36.211Z",
                    "updatedAt": "2014-10-08T00:12:01.367Z",
                    "messages": []
                  }]
              }
        default:
          description: Error
          schema:
            $ref: ErrorResponse
  /discussions/{discussionId}/messages/{messageId}:
    get:
      x-swagger-router-controller: messages
      description: Get a Message and it's children
      operationId: findById
      tags:
        - discussion
        - message
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: messageId
          in: path
          description:  Id of message
          required: true
          type: integer
          format: int64
        - name: expand
          in: query
          type: array
          required: false
          description: expand parameter which helps to request a full object
          items:
            type: string
      responses:
        "200":
          description: A successufly response
          schema:
            $ref: MessageResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 404,
                  "message": "Cannot find the message with messageId 10 in the discussion 4"
              }
    put:
      x-swagger-router-controller: messages
      description: Update a message
      operationId: update
      tags:
        - discussion
        - message
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: messageId
          in: path
          description:  Id of message
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            $ref: MessageBody
      responses:
        "200":
          description: Success
          schema:
            $ref: ActionResponse
          examples:
            application/json: |-
              {
                  "id": 123,
                  "result": {
                    "success": true,
                    "status": 200
                  }
              }
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 400,
                  "message": "Invalid content type (text/plain).  These are valid: application/json"
              }
    delete:
      x-swagger-router-controller: messages
      description: Delete a messsage
      operationId: delete
      tags:
        - discussion
        - message
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: messageId
          in: path
          description:  Id of message
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Successful reply
          schema:
            $ref: ActionResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 400,
                  "message": "invalid json"
              }
  /discussions/{discussionId}/messages/{messageId}/messages:
    post:
      x-swagger-router-controller: messages
      description: Create a reply to a message.  The message ID path param will be used as the parent id for the message.
      operationId: reply
      tags:
        - discussion
        - message
        - reply
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: messageId
          in: path
          description:  Id of message
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            $ref: MessageBody
      responses:
        "200":
          description: Successful reply
          schema:
            $ref: ActionResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
    get:
      x-swagger-router-controller: messages
      description: Get the child messages for a message
      operationId: getMessages
      tags:
        - discussion
        - message
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: messageId
          in: path
          description:  Id of message
          required: true
          type: integer
          format: int64
        - name: expand
          in: query
          type: array
          required: false
          description: expand parameter which helps to request a full object
          items:
            type: string
      responses:
        "200":
          description: Successful reply
          schema:
            $ref: MessagesResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
# complex objects have schema definitions
definitions:
  MessagesResponse:
    required:
      - status
      - success
      - content
    properties:
      success:
        type: boolean
        description: Was the request a success
      status:
        type: integer
        format: int32
        description: The http status code
      metadata:
        $ref: MetadataListResponse
      content:
        type: array
        items:
          $ref: MessageResource
          minItems: 0
          uniqueItems: true
  MessageResponse:
    required:
      - status
      - success
      - content
    properties:
      success:
        type: boolean
        description: Was the request a success
      status:
        type: integer
        format: int32
        description: The http status code
      metadata:
        $ref: MetadataListResponse
      content:
        $ref: MessageResource
  DiscussionResponse:
    required:
      - status
      - success
      - content
    properties:
      success:
        type: boolean
        description: Was the request a success
      status:
        type: integer
        format: int32
        description: The http status code
      metadata:
        $ref: MetadataListResponse
      content:
        $ref: DiscussionResource
  DiscussionsResponse:
    required:
      - status
      - success
      - content
    properties:
      success:
        type: boolean
        description: Was the request a success
      status:
        type: integer
        format: int32
        description: The http status code
      metadata:
        $ref: MetadataListResponse
      content:
        type: array
        items:
          $ref: DiscussionResource
          minItems: 0
          uniqueItems: true
  DiscussionResource:
    required:
      - id
      - remoteObjectKey
      - remoteObjectId
    properties:
      id:
        type: integer
        format: int64
      remoteObjectKey:
        type: string
      remoteObjectId:
        type: integer
        format: int64
      messageCount:
        type: integer
        format: int32
        description: The number of first level messages for this discussion.
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      createdBy:
        type: string
        description: The handle fo the user
      updatedBy:
        type: string
        description: The handle fo the user
      messages:
        type: array
        description: The first level child messages.
        items:
          $ref: MessageResource
          minItems: 0
          uniqueItems: true
  MessageResource:
    required:
      - id
      - discussionId
      - content
    properties:
      id:
        type: integer
        format: int64
      discussionId:
        type: integer
        format: int64
      content:
        type: string
      parentMessageId:
        description: The parent Message.  optional
        type: integer
        format: int64
      messageCount:
        type: integer
        format: int32
        description: The number of child messages for this message
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      createdBy:
        type: string
        description: The handle fo the user
      updatedBy:
        type: string
        description: The handle fo the user
      messages:
        type: array
        description: The first level child messages
        items:
          $ref: MessageResource
          minItems: 0
          uniqueItems: true
      discussion:
        $ref: DiscussionResource
        description: The discussion object which the message belongs to
      parentMessage:
        $ref: MessageResource
        description: The parent message which the message belongs to
  DiscussionBody:
    required:
      - remoteObjectKey
      - remoteObjectId
    properties:
      remoteObjectKey:
        description: The type of object which a discussion is attached. for example challenge or submission
        type: string
      remoteObjectId:
        description: The id of the remote object
        type: integer
        format: int64
  MessageBody:
    required:
      - content
    properties:
      content:
        description:  The content of the message
        type: string
  ActionResponse:
    required:
      - id
    properties:
      id:
        type: integer
        format: int64
        description:  The ID that was created for a new object.  Otherwise the id of the affected object
      result:
        properties:
          success:
            type: boolean
            description: Was the request a success
          status:
            type: integer
            format: int32
            description: The http status code
  MetadataListResponse:
    properties:
      totalCount:
        type: integer
        format: int32
  ErrorResponse:
    properties:
      result:
        properties:
          success:
            type: boolean
            description: Was the request a success.  Should be false
          status:
            type: integer
            format: int32
            description: The http status code
          content:
            type: string
            description: The error message
